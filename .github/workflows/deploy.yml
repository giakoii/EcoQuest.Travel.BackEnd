name: Deploy .NET app to VPS

on:
  push:
    branches:
      - deploy

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup .NET SDK 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Clean publish folder
        run: rm -rf ./publish

      - name: Build and publish on runner
        run: |
          dotnet restore BackEnd/BackEnd.csproj
          dotnet publish BackEnd/BackEnd.csproj -c Release -o ./publish

      - name: Clean old publish folder on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "🧹 Cleaning old publish folder"
            rm -rf ~/apps/EcoQuest/EcoQuest.Travel.BackEnd/publish
            mkdir -p ~/apps/EcoQuest/EcoQuest.Travel.BackEnd/publish

      - name: Copy publish folder to VPS
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "./publish"
          target: "~/apps/EcoQuest/EcoQuest.Travel.BackEnd"

      - name: SSH and deploy on VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/apps/EcoQuest/EcoQuest.Travel.BackEnd/publish
            cp ~/envs/ecoquest/.env .env && echo "✅ Copied .env successfully" || echo "❌ Failed to copy .env"
            export $(grep CONNECTION_STRING .env | xargs)

            echo "🔍 Checking existing app process..."
            PID=$(ps aux | grep "EcoQuest.Travel.BackEnd.dll" | grep -v grep | awk '{print $2}')
            if [ -n "$PID" ]; then
              echo "🛑 Killing process $PID"
              kill -9 $PID
            else
              echo "⚠️ No process found"
            fi

            echo "🚀 Starting new application"
            nohup dotnet EcoQuest.Travel.BackEnd.dll > output.log 2>&1 &
            echo "✅ Started application"

            sleep 10
            echo "📄 Checking output.log"
            ls -l output.log || echo "❌ output.log not found"
            cat output.log || echo "⚠️ Cannot read output.log"

      - name: Notify app URL
        run: echo "App is running at http://${{ secrets.VPS_HOST }}:5269"